// Code generated by entc, DO NOT EDIT.

package ent

import (
	"entproject/ent/schema"
	"entproject/ent/service"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	serviceFields := schema.Service{}.Fields()
	_ = serviceFields
	// serviceDescName is the schema descriptor for name field.
	serviceDescName := serviceFields[1].Descriptor()
	// service.NameValidator is a validator for the "name" field. It is called by the builders before save.
	service.NameValidator = func() func(string) error {
		validators := serviceDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// serviceDescID is the schema descriptor for id field.
	serviceDescID := serviceFields[0].Descriptor()
	// service.DefaultID holds the default value on creation for the id field.
	service.DefaultID = serviceDescID.Default.(func() uuid.UUID)
}
